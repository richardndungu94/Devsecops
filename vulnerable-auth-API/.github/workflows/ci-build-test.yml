name: CI Build & Smoke Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image (with BuildKit)
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build --progress=plain -t vuln-auth-api:ci .

      - name: Create network and start Mongo
        run: |
          docker network create ci-net || true
          docker run -d --name mongo-ci --network ci-net mongo:6 || true
          # wait for Mongo to be ready
          for i in $(seq 1 30); do
            if docker exec mongo-ci mongo --eval 'db.adminCommand("ping")' >/dev/null 2>&1; then
              echo "mongo ready"
              break
            fi
            echo "waiting for mongo..."
            sleep 1
          done

      - name: Run app container
        run: |
          docker run -d --name vuln-ci --network ci-net -p 3001:3000 -e MONGO_URI='mongodb://mongo-ci:27017/authdb' vuln-auth-api:ci
          # wait for app logs that indicate startup
          for i in $(seq 1 60); do
            if docker logs vuln-ci 2>&1 | grep -q "Server running on PORT"; then
              echo "app started"
              break
            fi
            echo "waiting for app..."
            sleep 1
          done

      - name: Verify startup
        run: |
          if docker logs vuln-ci 2>&1 | grep -q "Server running on PORT"; then
            echo "Startup confirmed"
          else
            echo "Logs:" && docker logs vuln-ci || true
            docker ps -a || true
            exit 1
          fi

      - name: Tear down
        if: always()
        run: |
          docker stop vuln-ci || true
          docker rm vuln-ci || true
          docker stop mongo-ci || true
          docker rm mongo-ci || true
          docker network rm ci-net || true
