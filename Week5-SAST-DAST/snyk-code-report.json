{"$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/errata01/os/schemas/sarif-schema-2.1.0.json","version": "2.1.0","runs": [{"tool": {"driver" : {"name" : "SnykCode","semanticVersion" : "1.1299.1","version" : "1.1299.1","informationUri" : "https://docs.snyk.io/","rules" : [{"id": "javascript/DisablePoweredBy","name": "DisablePoweredBy","shortDescription": {"text": "Information Exposure - X-Powered-By Header"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n## Best practices for prevention\n- Encrypt data at all times, whether in transit or at rest.\n- When transporting data, always use a secure protocol such as TLS.\n- Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n- Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n- Ensure that caching is disabled for all transactions involving sensitive information.\n- Store passwords with secure, salted hashing functions.\n- Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.","text": ""},"properties": {"tags": ["javascript","DisablePoweredBy","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/lucasweng/yelp-camp/commit/f4e907734aea3ec98000d61f5d49c729a95cb77c?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1","lines": [{"line": "      app            = express(),\n","lineNumber": 1,"lineChange": "none"},{"line": "      bodyParser     = require(\"body-parser\"),\n","lineNumber": 2,"lineChange": "none"},{"line": "      mongoose       = require(\"mongoose\"),\n","lineNumber": 3,"lineChange": "none"},{"line": "      helmet         = require(\"helmet\"),\n","lineNumber": 4,"lineChange": "added"},{"line": "      flash          = require(\"connect-flash\"),\n","lineNumber": 5,"lineChange": "none"},{"line": "      session        = require(\"express-session\"),\n","lineNumber": 6,"lineChange": "none"},{"line": "      moment         = require(\"moment\"),\n","lineNumber": 7,"lineChange": "none"},{"line": "      passport       = require(\"passport\"),\n","lineNumber": 8,"lineChange": "none"},{"line": "      LocalStrategy  = require(\"passport-local\"),\n","lineNumber": 9,"lineChange": "none"},{"line": "      methodOverride = require(\"method-override\"),\n","lineNumber": 10,"lineChange": "none"},{"line": "      User           = require(\"./models/user\");\n","lineNumber": 11,"lineChange": "none"},{"line": "\n","lineNumber": 12,"lineChange": "none"},{"line": "// requiring routes     \n","lineNumber": 13,"lineChange": "none"},{"line": "const indexRoute      = require(\"./routes/index\"),\n","lineNumber": 14,"lineChange": "none"},{"line": "      campgroundRoute = require(\"./routes/campgrounds\"),\n","lineNumber": 15,"lineChange": "none"},{"line": "      commentRoute    = require(\"./routes/comments\"),\n","lineNumber": 16,"lineChange": "none"},{"line": "      userRoute       = require(\"./routes/user\"),\n","lineNumber": 17,"lineChange": "none"},{"line": "      passwordRoute   = require(\"./routes/password\");\n","lineNumber": 18,"lineChange": "none"},{"line": "\n","lineNumber": 19,"lineChange": "none"},{"line": "// connect to the DB\n","lineNumber": 20,"lineChange": "none"},{"line": "let url = process.env.DATABASEURL || \"mongodb://localhost/yelp_camp_v13\"; // fallback in case global var not working\n","lineNumber": 21,"lineChange": "none"},{"line": "mongoose.connect(url, {useMongoClient: true});\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "app.set(\"view engine\", \"ejs\");\n","lineNumber": 24,"lineChange": "none"},{"line": "app.use(helmet());\n","lineNumber": 25,"lineChange": "added"}]},{"commitURL": "https://github.com/infor-design/enterprise/commit/20888f176d6bccc41b009a54b2d47a2b29845db3?diff=split#diff-322f0482bd28fc40f84fcb0aaf208fef7fb63082d462cf02d11f46e59c531c24L-1","lines": [{"line": "const app = express();\n","lineNumber": 9,"lineChange": "none"},{"line": "const BASE_PATH = process.env.BASEPATH || '/';\n","lineNumber": 10,"lineChange": "none"},{"line": "const packageJSON = getJSONFile('../../../package.json');\n","lineNumber": 11,"lineChange": "none"},{"line": "\n","lineNumber": 12,"lineChange": "none"},{"line": "app.set('view engine', 'html');\n","lineNumber": 13,"lineChange": "none"},{"line": "app.set('views', path.resolve(__dirname, 'views'));\n","lineNumber": 14,"lineChange": "none"},{"line": "app.set('basepath', BASE_PATH);\n","lineNumber": 15,"lineChange": "none"},{"line": "app.disable('x-powered-by');\n","lineNumber": 16,"lineChange": "added"}]},{"commitURL": "https://github.com/galtenberg/evernote-random/commit/32109271055df8a60bf4dafe289b717dbb950305?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79L-1","lines": [{"line": "const csp = require('helmet-csp')\n","lineNumber": 5,"lineChange": "added"},{"line": "\n","lineNumber": 6,"lineChange": "none"},{"line": "const app = express()\n","lineNumber": 7,"lineChange": "none"},{"line": "\n","lineNumber": 8,"lineChange": "none"},{"line": "app.use(morgan(':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] :response-time ms'));\n","lineNumber": 9,"lineChange": "none"},{"line": "\n","lineNumber": 10,"lineChange": "none"},{"line": "// parse application/x-www-form-urlencoded\n","lineNumber": 11,"lineChange": "none"},{"line": "app.use(bodyParser.urlencoded({ extended: false }))\n","lineNumber": 12,"lineChange": "none"},{"line": "// json parser\n","lineNumber": 13,"lineChange": "none"},{"line": "app.use(bodyParser.json())\n","lineNumber": 14,"lineChange": "none"},{"line": "// Serve static assets\n","lineNumber": 15,"lineChange": "none"},{"line": "app.use(express.static(path.resolve(__dirname, '..', 'build')))\n","lineNumber": 15,"lineChange": "none"},{"line": "\n","lineNumber": 17,"lineChange": "none"},{"line": "// Re-enable on glitch.com\n","lineNumber": 18,"lineChange": "none"},{"line": "// Always return the main index.html, so react-router render the route in the client\n","lineNumber": 19,"lineChange": "none"},{"line": "//app.get('*', (req, res) => {\n","lineNumber": 19,"lineChange": "none"},{"line": "  //res.sendFile(path.resolve(__dirname, '..', 'build', 'index.html'));\n","lineNumber": 21,"lineChange": "none"},{"line": "//})\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "app.use(cookieSession({\n","lineNumber": 24,"lineChange": "none"},{"line": "  name: 'evernoteSolitaire',\n","lineNumber": 25,"lineChange": "none"},{"line": "  secret: 'evernote-sandbox-secret',\n","lineNumber": 26,"lineChange": "none"},{"line": "  maxAge: 30 * 24 * 60 * 60 * 1000 // 1 month\n","lineNumber": 27,"lineChange": "none"},{"line": "}))\n","lineNumber": 28,"lineChange": "none"},{"line": "\n","lineNumber": 29,"lineChange": "none"},{"line": "//require('./api/experiment')(app)\n","lineNumber": 29,"lineChange": "none"},{"line": "require('./api/auth')(app)\n","lineNumber": 30,"lineChange": "none"},{"line": "require('./api/notes')(app)\n","lineNumber": 31,"lineChange": "none"},{"line": "\n","lineNumber": 32,"lineChange": "none"},{"line": "const PORT = process.env.PORT || 8000\n","lineNumber": 33,"lineChange": "removed"},{"line": "app.use(bodyParser.json({\n","lineNumber": 33,"lineChange": "added"},{"line": "  type: ['json', 'application/csp-report']\n","lineNumber": 34,"lineChange": "added"},{"line": "}))\n","lineNumber": 35,"lineChange": "added"},{"line": "\n","lineNumber": 36,"lineChange": "added"},{"line": "app.post('/report-violation', function (req, res) {\n","lineNumber": 37,"lineChange": "added"},{"line": "  if (req.body) {\n","lineNumber": 38,"lineChange": "added"},{"line": "    console.log('CSP Violation: ', req.body)\n","lineNumber": 39,"lineChange": "added"},{"line": "  } else {\n","lineNumber": 40,"lineChange": "added"},{"line": "    console.log('CSP Violation: No data received!')\n","lineNumber": 41,"lineChange": "added"},{"line": "  }\n","lineNumber": 42,"lineChange": "added"},{"line": "  res.status(204).end()\n","lineNumber": 43,"lineChange": "added"},{"line": "})\n","lineNumber": 44,"lineChange": "added"},{"line": "\n","lineNumber": 45,"lineChange": "added"},{"line": "const PORT = 8000 //process.env.PORT || 8000\n","lineNumber": 46,"lineChange": "added"},{"line": "\n","lineNumber": 47,"lineChange": "added"},{"line": "app.use(csp({\n","lineNumber": 48,"lineChange": "added"},{"line": "  directives: {\n","lineNumber": 49,"lineChange": "added"},{"line": "    defaultSrc: [\"'self'\"],\n","lineNumber": 50,"lineChange": "added"},{"line": "    scriptSrc: [\"'unsafe-inline'\"],\n","lineNumber": 51,"lineChange": "added"},{"line": "    styleSrc: [\"'unsafe-inline'\"],\n","lineNumber": 52,"lineChange": "added"},{"line": "    reportUri: '/report-violation',\n","lineNumber": 53,"lineChange": "added"},{"line": "    upgradeInsecureRequests: true\n","lineNumber": 54,"lineChange": "added"},{"line": "  },\n","lineNumber": 55,"lineChange": "added"},{"line": "  reportOnly: false,\n","lineNumber": 56,"lineChange": "added"},{"line": "  loose: true,\n","lineNumber": 57,"lineChange": "added"},{"line": "  setAllHeaders: true,\n","lineNumber": 58,"lineChange": "added"},{"line": "  browserSniff: false\n","lineNumber": 59,"lineChange": "added"},{"line": "}))\n","lineNumber": 60,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 416,"cwe": ["CWE-200"]}},{"id": "javascript/HardcodedNonCryptoSecret","name": "HardcodedNonCryptoSecret","shortDescription": {"text": "Hardcoded Non-Cryptographic Secret"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.","text": ""},"properties": {"tags": ["javascript","HardcodedNonCryptoSecret","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/markstock7/FileManager/commit/50572778825dea6b6fdb34c9ae950d9915743e4c?diff=split#diff-408990876524f4737b49693cedc52fd267e31f665d0a7f71792dcb986d6a8268L-1","lines": [{"line": "accessKeyId: 'pT3KujnBPxc0ey7G',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secretAccessKey: 'CcHjh2y7tIFljxgUT4U8sQLctkMBHu',\n","lineNumber": 2,"lineChange": "removed"},{"line": "accessKeyId: '',\n","lineNumber": 1,"lineChange": "added"},{"line": "secretAccessKey: '',\n","lineNumber": 2,"lineChange": "added"}]},{"commitURL": "https://github.com/leohmoraes/rocketseat-02/commit/69e888ed7c779a0fbb0d0c08a219afa11b3913bd?diff=split#diff-04122576a4101a4ed68c79faa4f4605c44d8fd93252cff9e64ba66ab9c561e86L-1","lines": [{"line": "secret: '9dffij39asf23nsfnsvsdsa',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secret: process.env.APP_SECRET,\n","lineNumber": 1,"lineChange": "added"}]},{"commitURL": "https://github.com/rodrigotamura/go-stack-2019/commit/26e020dfc2272fe76c82c28d86f492c3c84a94c5?diff=split#diff-92f76c0bccc1f970244da3b50449f200d4787cf60a87be14ff4f250d0ba1a590L-1","lines": [{"line": "secret: '632ca4dfc8b2269e6fdf03ab5a55d2ec',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secret: process.env.APP_SECRET,\n","lineNumber": 1,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 100,"cwe": ["CWE-547"]}},{"id": "javascript/HardcodedSecret","name": "HardcodedSecret","shortDescription": {"text": "Hardcoded Secret"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.","text": ""},"properties": {"tags": ["javascript","HardcodedSecret","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/dooboolab/talktalk-node/commit/f1824b890376c8b5a4362682d4112d42334d9db3?diff=split#diff-3274f1a37032fb0ae4e2823def0007c634e869ae0dfc304ff6a12c36513c3a52L-1","lines": [{"line": "import jwt, { verify } from 'jsonwebtoken';\n","lineNumber": 0,"lineChange": "removed"},{"line": "import jwt from 'jsonwebtoken';\n","lineNumber": 0,"lineChange": "added"},{"line": "\n","lineNumber": 1,"lineChange": "none"},{"line": "const APP_SECRET = 'REACT NATIVE SEOUL - DOOBOOLAB';\n","lineNumber": 2,"lineChange": "removed"},{"line": "const { JWT_SECRET } = process.env;\n","lineNumber": 2,"lineChange": "added"},{"line": "\n","lineNumber": 3,"lineChange": "none"},{"line": "class AuthError extends Error {\n","lineNumber": 4,"lineChange": "none"},{"line": "  constructor() {\n","lineNumber": 5,"lineChange": "none"},{"line": "    super('Not authorized');\n","lineNumber": 6,"lineChange": "none"},{"line": "  }\n","lineNumber": 7,"lineChange": "none"},{"line": "}\n","lineNumber": 8,"lineChange": "none"},{"line": "\n","lineNumber": 9,"lineChange": "none"},{"line": "const getUserId = (context) => {\n","lineNumber": 10,"lineChange": "removed"},{"line": "  const Authorization = context.request.get('Authorization');\n","lineNumber": 11,"lineChange": "removed"},{"line": "  if (Authorization) {\n","lineNumber": 12,"lineChange": "removed"},{"line": "    const token = Authorization.replace('Bearer ', '');\n","lineNumber": 13,"lineChange": "removed"},{"line": "    const { userId } = jwt.verify(token, APP_SECRET);\n","lineNumber": 14,"lineChange": "removed"},{"line": "export const getUserId = (context) => {\n","lineNumber": 10,"lineChange": "added"},{"line": "  const authHeader = context.request.get('Authorization');\n","lineNumber": 11,"lineChange": "added"},{"line": "  if (authHeader) {\n","lineNumber": 12,"lineChange": "added"},{"line": "    const token = authHeader.replace('Bearer ', '');\n","lineNumber": 13,"lineChange": "added"},{"line": "    const { userId } = jwt.verify(token, JWT_SECRET);\n","lineNumber": 14,"lineChange": "added"}]},{"commitURL": "https://github.com/aniemerg/yieldtoken/commit/93487332d4e7ee9843f1cf37e10fb38fc091db1f?diff=split#diff-8f7ceaa83eaf3c53b82b8dc646e61e0d66a865cec9da0baa4c19b9833baacd0fL-1","lines": [{"line": "var mnemonic = \"cigar coil mad entry frequent invite toast reflect climb daring tribe luggage\";\n","lineNumber": 27,"lineChange": "removed"},{"line": "require('dotenv').config();\n","lineNumber": 27,"lineChange": "added"},{"line": "var mnemonic = process.env.KOVAN_MNEMONIC;\n","lineNumber": 28,"lineChange": "added"}]},{"commitURL": "https://github.com/iurii-kyrylenko/hobbies/commit/8dbb1d12a60150c1deef7437e9c959856daf550d?diff=split#diff-369f45272263cc9c9fd4790c2e568e4662e337381f2fdda11d18f6b5a4551560L-1","lines": [{"line": "    exp: parseInt(expiry.getTime() / 1000),\n","lineNumber": 36,"lineChange": "removed"},{"line": "}, \"MY_SECRET\");\n","lineNumber": 37,"lineChange": "removed"},{"line": "    exp: parseInt(expiry.getTime() / 1000)\n","lineNumber": 36,"lineChange": "added"},{"line": "}, process.env.JWT_SECRET);\n","lineNumber": 37,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 60,"cwe": ["CWE-547"]}},{"id": "javascript/HttpToHttps","name": "HttpToHttps","shortDescription": {"text": "Cleartext Transmission - HTTP Instead of HTTPS"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n## Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.","text": ""},"properties": {"tags": ["javascript","HttpToHttps","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/REBELinBLUE/deployer/commit/bdb2c9750c497c9bc025580ce5bf5b8a6972de17?diff=split#diff-112ac233b1e3314b31d86e70dd54fd358cf3e246c38a63bf2e3085a47a0d6cf3L-1","lines": [{"line": "var redis = new Redis();\n","lineNumber": 9,"lineChange": "removed"},{"line": "var redis = new Redis({\n","lineNumber": 9,"lineChange": "added"},{"line": "    db: ENV.REDIS_DATBASE || 0\n","lineNumber": 10,"lineChange": "added"},{"line": "});\n","lineNumber": 11,"lineChange": "added"},{"line": "\n","lineNumber": 12,"lineChange": "added"},{"line": "if (!/^https/i.test(process.env.SOCKET_URL)) {\n","lineNumber": 13,"lineChange": "added"},{"line": "\n","lineNumber": 14,"lineChange": "added"},{"line": "    var ssl_conf = {\n","lineNumber": 15,"lineChange": "added"},{"line": "        key:  (process.env.SOCKET_SSL_KEY_FILE  ? fs.readFileSync(process.env.SOCKET_SSL_KEY_FILE)  : null),\n","lineNumber": 16,"lineChange": "added"},{"line": "        cert: (process.env.SOCKET_SSL_CERT_FILE ? fs.readFileSync(process.env.SOCKET_SSL_CERT_FILE) : null),\n","lineNumber": 17,"lineChange": "added"},{"line": "        ca:   (process.env.SOCKET_SSL_CA_FILE   ? fs.readFileSync(process.env.SOCKET_SSL_CA_FILE)   : null)\n","lineNumber": 18,"lineChange": "added"},{"line": "    };\n","lineNumber": 19,"lineChange": "added"},{"line": "\n","lineNumber": 20,"lineChange": "added"},{"line": "    var app = require('https').createServer(ssl_conf, handler);\n","lineNumber": 21,"lineChange": "added"},{"line": "} else {\n","lineNumber": 22,"lineChange": "added"},{"line": "    var app = require('http').createServer(handler);\n","lineNumber": 23,"lineChange": "added"},{"line": "}\n","lineNumber": 24,"lineChange": "added"}]},{"commitURL": "https://github.com/medic/couch2pg/commit/062eaa0f53d2cd2327232a695c60bf4c9fd589f6?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1","lines": [{"line": "var httplib = require('http');\n","lineNumber": 1,"lineChange": "removed"},{"line": "var httplib = require('https');\n","lineNumber": 1,"lineChange": "added"}]},{"commitURL": "https://github.com/Rich-Harris/packd/commit/c14d17da80ed075ee007de3121422fb2c5b77e4d?diff=split#diff-1821d11fbffbab2187701c42616688d46bf66d7b2cf6eaf363548dd66caa6ebaL-1","lines": [{"line": "const http = require( 'http' );\n","lineNumber": 0,"lineChange": "removed"},{"line": "const https = require( 'https' );\n","lineNumber": 0,"lineChange": "added"},{"line": "\n","lineNumber": 1,"lineChange": "none"},{"line": "module.exports = function get ( url ) {\n","lineNumber": 2,"lineChange": "none"},{"line": "\treturn new Promise( ( fulfil, reject ) => {\n","lineNumber": 3,"lineChange": "none"},{"line": "\t\thttp.get( url, response => {\n","lineNumber": 4,"lineChange": "removed"},{"line": "\t\thttps.get( url, response => {\n","lineNumber": 4,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 122,"cwe": ["CWE-319"]}},{"id": "javascript/InsecureHash","name": "InsecureHash","shortDescription": {"text": "Use of Password Hash With Insufficient Computational Effort"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.","text": ""},"properties": {"tags": ["javascript","InsecureHash","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/mafintosh/hyperlog/commit/d93cc65e485d740face1dacffa66dbcf03bcc7c3?diff=split#diff-b29a862e995b5e16d1763a35604cec4f13f3ca08bb9318d8f7ccfa24b757f7e0L-1","lines": [{"line": "return crypto.createHash('sha1')\n","lineNumber": 3,"lineChange": "removed"},{"line": "return crypto.createHash('sha256')\n","lineNumber": 3,"lineChange": "added"}]},{"commitURL": "https://github.com/raphael-group/magi/commit/1e1ed6435a97858e38d0cab962d7e248710f60e1?diff=split#diff-a4bd8e7c606b00ad2f2d6eeb95ba96714ece5c8b1266c2b503f3531b12d46257L-1","lines": [{"line": "hasher = crypto.createHash('md5').update(url),\n","lineNumber": 7,"lineChange": "removed"},{"line": "hasher = crypto.createHash('RIPEMD-64').update(url),\n","lineNumber": 7,"lineChange": "added"}]},{"commitURL": "https://github.com/steilerDev/homebridge-openhab2-complete/commit/6e92ef40f991cc372b701390945e0e5bbeb71016?diff=split#diff-34bbd467b1ab0e3497ce244b09d2bfbc4ab192303dd90b13603baf6711b522dfL-1","lines": [{"line": "function generate(name) {\n","lineNumber": 4,"lineChange": "removed"},{"line": "    const sha1sum = crypto.createHash('sha1');\n","lineNumber": 5,"lineChange": "removed"},{"line": "    sha1sum.update(name);\n","lineNumber": 6,"lineChange": "removed"},{"line": "function generate(name, type) {\n","lineNumber": 4,"lineChange": "added"},{"line": "    const hash = crypto.createHash('sha512');\n","lineNumber": 5,"lineChange": "added"},{"line": "    hash.update(name);\n","lineNumber": 6,"lineChange": "added"},{"line": "    hash.update(type);\n","lineNumber": 7,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 134,"cwe": ["CWE-916"]}},{"id": "javascript/InsecureTLSConfig","name": "InsecureTLSConfig","shortDescription": {"text": "Insecure TLS Configuration"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "\n## Details\n\nImplementing encryption for the transmission and storage of sensitive information is essential. But encryption standards are constantly changing since attackers have more and more powerful resources at their disposal-along with more sophisticated attack algorithms. This means that encryption is only useful if it meets current standards appropriate for the type of data being transmitted or stored.\nWhen organizations use weakly encoded passwords or weak hashes (especially when they also utilize single-factor authentication, which places too much emphasis on passwords), attackers can potentially gain unauthorized access through a brute-force attack.\n\n## Best practices for prevention\n* Use TLS instead of SSL\n* Be aware of outdated algorithms; recognize and implement current cryptographic standards instead.\n* Never use custom or DIY security and cryptographic methods; instead, use methods that are part of an accepted library or framework.\n* Ensure that code dealing with cryptographic methods is highly modular and can be easily replaced as security standards change.\n* Increase developer awareness of proper encryption key management and protection to ensure best practices throughout the application.","text": ""},"properties": {"tags": ["javascript","InsecureTLSConfig","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/theturtle32/WebSocket-Node/commit/7ecb6906d71bf322356a256d4fbd4581be07fceb?diff=split#diff-1c091255d5e58d699b2a67648f690af2f01466af19fe6d7d6759193bcb8c9589L-1","lines": [{"line": "process.env.NODE_TLS_REJECT_UNAUTHORIZED = \"0\";\n","lineNumber": 0,"lineChange": "removed"},{"line": "\n","lineNumber": 1,"lineChange": "removed"}]},{"commitURL": "https://github.com/avwo/whistle/commit/4446187fd42094d63c4ab95ab8748504c2d9ffd3?diff=split#diff-07509d4619dec975a062f66e1a998874eb410f127cde9fc20e80e032fa68e814L-1","lines": [{"line": "options.method = req.method;\n","lineNumber": 296,"lineChange": "none"},{"line": "options.rejectUnauthorized = false;\n","lineNumber": 297,"lineChange": "removed"},{"line": "options.rejectUnauthorized = config.rejectUnauthorized;\n","lineNumber": 297,"lineChange": "added"},{"line": "if (!options.isPlugin && !req._customHost && (req.fullUrl !== req.realUrl || !headers.host)) {\n","lineNumber": 298,"lineChange": "none"}]},{"commitURL": "https://github.com/DevExpress/testcafe-hammerhead/commit/737ea46477a359a18d529396ee04c79d3af3b7f3?diff=split#diff-de7804a3c2e561311d32b8ac5facdf617883b92dc538ee667b5e5ebd043eba60L-1","lines": [{"line": "import { transformHeadersCaseToRaw } from '../header-transforms';\n","lineNumber": 13,"lineChange": "none"},{"line": "\n","lineNumber": 14,"lineChange": "none"},{"line": "// HACK: Ignore SSL auth. The rejectUnauthorized option in the https.request method\n","lineNumber": 15,"lineChange": "removed"},{"line": "// doesn't work (see: https://github.com/mikeal/request/issues/418).\n","lineNumber": 16,"lineChange": "removed"},{"line": "process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\n","lineNumber": 17,"lineChange": "removed"},{"line": "\n","lineNumber": 18,"lineChange": "removed"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 55,"cwe": ["CWE-327"]}},{"id": "javascript/reDOS","name": "reDOS","shortDescription": {"text": "Regular Expression Denial of Service (ReDoS)"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet's take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn't match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.","text": ""},"properties": {"tags": ["javascript","reDOS","Security","SourceServer","SourceRequestUrl","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/passbolt/passbolt_browser_extension/commit/b41d81ad653a880b09f2ac9ef5732726e448d219?diff=split#diff-bb2af03a5383ab66270372d437427ef8af4a149710d7d6e5938548c6d5f3b8c5L-1","lines": [{"line": "\n","lineNumber": 27,"lineChange": "removed"},{"line": "  // Retrieve the setup bootstrap regex.\n","lineNumber": 28,"lineChange": "removed"},{"line": "  passbolt.request('passbolt.config.read', 'setupBootstrapRegex')\n","lineNumber": 29,"lineChange": "removed"},{"line": "    .then(function (setupBootstrapRegex) {\n","lineNumber": 30,"lineChange": "removed"},{"line": "  const uuidRegex = \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[0-5][a-fA-F0-9]{3}-[089aAbB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}\";\n","lineNumber": 27,"lineChange": "added"},{"line": "  const setupBootstrapRegex = `(.*)\\/setup\\/(install|recover)\\/(${uuidRegex})\\/(${uuidRegex})`;\n","lineNumber": 28,"lineChange": "added"},{"line": "  var regex = new RegExp(setupBootstrapRegex),\n","lineNumber": 31,"lineChange": "none"}]},{"commitURL": "https://github.com/XiaoMi/hiui/commit/488dd61cefe176af7097dfd7a3448bd190ecffff?diff=split#diff-ddbcffeff01d66de820d5badf769d19b42b8564953784470c52ad68cbc4b83f1L-1","lines": [{"line": "return this.isRemote() || (!searchable || !keyword) || (searchable && keyword && (String(item.id).match(keyword) || String(item.name).match(keyword)))\n","lineNumber": 407,"lineChange": "removed"},{"line": "return this.isRemote() || (!searchable || !keyword) || (searchable && keyword && (String(item.id).includes(keyword) || String(item.name).includes(keyword)))\n","lineNumber": 407,"lineChange": "added"}]},{"commitURL": "https://github.com/infor-design/enterprise/commit/51c32f05c358e7e01ca5b246c067299cd7993c1c?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1","lines": [{"line": "new RegExp('_' + type + '\\\\.scss'),\n","lineNumber": 344,"lineChange": "removed"},{"line": "new RegExp('(\\d|\\w|\\s|-)*?\\.(scss)'),\n","lineNumber": 344,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 84,"cwe": ["CWE-400"]}}]}},"results": [{"ruleId": "javascript/DisablePoweredBy","ruleIndex": 0,"level": "warning","message": {"text":"Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.","markdown":"Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.","arguments": ["[Express app](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":39,  "endLine":39,  "startColumn":13,  "endColumn":20}  }}],"fingerprints": {"identity": "12339919-697b-4afb-a463-9a3069842443","0": "2cad00b0eac5fdbc5082dec49cc0facf73c55849a1dd7ca3a341dfbae1ff8ef8","1": "ae77ea27.4773f344.8b18f948.d7919eeb.a1fb1152.5fce695c.ea4b1c47.89d75565.ae77ea27.1be92aed.44eded10.d7919eeb.79a7d027.5fce695c.69fd0700.89d75565","snyk/asset/finding/v1": "12339919-697b-4afb-a463-9a3069842443"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":39,  "endLine":39,  "startColumn":13,  "endColumn":20}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 506,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/HardcodedNonCryptoSecret","ruleIndex": 1,"level": "error","message": {"text":"Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.","markdown":"Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.","arguments": ["[a hardcoded string](0)","[here](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/jwa/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":7,  "endLine":7,  "startColumn":5,  "endColumn":23}  }}],"fingerprints": {"identity": "ef22b766-aa94-44d1-a3fc-c9a43f6cef4e","0": "ea18882fcec32ca7d84ec1269387afee9f3536a00999bc340ef15de0edf684b2","1": "c8790421.4773f344.3838c441.07b9d921.5c2b5c9d.5fce695c.f0256597.89d75565.c8790421.4773f344.3838c441.07b9d921.5c2b5c9d.5fce695c.f0256597.89d75565","snyk/asset/finding/v1": "ef22b766-aa94-44d1-a3fc-c9a43f6cef4e"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/jwa/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":7,  "endLine":7,  "startColumn":26,  "endColumn":61}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/jwa/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":7,  "endLine":7,  "startColumn":5,  "endColumn":23}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 756,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/HardcodedSecret","ruleIndex": 2,"level": "error","message": {"text":"Hardcoded value is used as a cipher key (in jsonwebtoken.sign). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.","markdown":"Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.","arguments": ["[value](0)","[cipher key (in jsonwebtoken.sign)](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/controllers/authcontroller.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":59,  "endLine":59,  "startColumn":54,  "endColumn":71}  }}],"fingerprints": {"identity": "729cc136-ea3d-49c4-8766-15e239a28f9a","0": "2ccf9b19ed5077816182dd7a57f923b3bd29c732dda8ce32a32a6245ff24ceeb","1": "46b7c801.4773f344.607187b5.72a8f743.79a7d027.8020cfdf.cd61fc56.5691ba88.46b7c801.4773f344.8b18f948.72a8f743.79a7d027.47361af2.cd61fc56.5691ba88","snyk/asset/finding/v1": "729cc136-ea3d-49c4-8766-15e239a28f9a"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/controllers/authcontroller.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":59,  "endLine":59,  "startColumn":54,  "endColumn":71}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/controllers/authcontroller.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":59,  "endLine":59,  "startColumn":10,  "endColumn":18}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 761,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/HardcodedSecret","ruleIndex": 2,"level": "error","message": {"text":"Hardcoded value is used as a cipher key (in jsonwebtoken.verify). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.","markdown":"Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.","arguments": ["[value](0)","[cipher key (in jsonwebtoken.verify)](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/middleware/authMiddleware.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":12,  "endLine":12,  "startColumn":38,  "endColumn":55}  }}],"fingerprints": {"identity": "dd1b0710-1bf4-4c4d-8ad6-b1f5fe8b1596","0": "3d7cf293f8abc5bdfa0e4665917ce719874f1971403da14fca4a052ef4060aef","1": "46b7c801.4773f344.8b18f948.72a8f743.4c40509c.f30cf624.ea4b1c47.5691ba88.46b7c801.4773f344.8b18f948.72a8f743.4c40509c.f30cf624.cd61fc56.3357ef26","snyk/asset/finding/v1": "dd1b0710-1bf4-4c4d-8ad6-b1f5fe8b1596"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/middleware/authMiddleware.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":12,  "endLine":12,  "startColumn":38,  "endColumn":55}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/middleware/authMiddleware.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":12,  "endLine":12,  "startColumn":20,  "endColumn":30}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 761,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/HttpToHttps","ruleIndex": 3,"level": "warning","message": {"text":"node:http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","markdown":"{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","arguments": ["[node:http.createServer](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/express/lib/application.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":599,  "endLine":599,  "startColumn":16,  "endColumn":33}  }}],"fingerprints": {"identity": "b733d642-971d-4bc7-a40a-25931d537214","0": "572cf7af2a45e32a90ebeae64c26e49ee9c2b26f2ec35d81a77173b4e5a9d838","1": "aac70831.883ce888.b8d9fa19.d7919eeb.2fce9a75.4bb87e98.cd61fc56.63ad1ad6.0423bc55.fba75ec3.607187b5.d7919eeb.968cbaba.4bb87e98.3bc5ce02.89d75565","snyk/asset/finding/v1": "b733d642-971d-4bc7-a40a-25931d537214"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/express/lib/application.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":599,  "endLine":599,  "startColumn":16,  "endColumn":33}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 527,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/HttpToHttps","ruleIndex": 3,"level": "warning","message": {"text":"http.get uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","markdown":"{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","arguments": ["[http.get](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/utils.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":964,  "endLine":965,  "startColumn":25,  "endColumn":17}  }}],"fingerprints": {"identity": "e0637388-131c-4879-a4ad-ba678cf318a4","0": "1fae1b53e4953fa1bd80de77774bdceba0e9590c154cf9a4a05a26f5058a4fd3","1": "75ab1887.70dd3b3b.568208f0.c559ebce.79a7d027.a362d65a.83265159.b20a940a.7a85a498.44e49f23.85e21607.c559ebce.79a7d027.5fce695c.83265159.89d75565","snyk/asset/finding/v1": "e0637388-131c-4879-a4ad-ba678cf318a4"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/utils.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":964,  "endLine":965,  "startColumn":25,  "endColumn":17}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 577,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/HttpToHttps","ruleIndex": 3,"level": "warning","message": {"text":"http.get uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","markdown":"{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","arguments": ["[http.get](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/utils.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":1204,  "endLine":1205,  "startColumn":21,  "endColumn":11}  }}],"fingerprints": {"identity": "fc4f5770-0fac-4599-ae1b-4acd353bb78e","0": "6b0684fa00558bf9fb6f062008bf1996d67a720194c00db889af7f1044078212","1": "75ab1887.70dd3b3b.568208f0.c559ebce.79a7d027.a362d65a.83265159.b20a940a.9ff0579e.706318d0.568208f0.c559ebce.79a7d027.5fce695c.83265159.89d75565","snyk/asset/finding/v1": "fc4f5770-0fac-4599-ae1b-4acd353bb78e"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/utils.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":1204,  "endLine":1205,  "startColumn":21,  "endColumn":11}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 577,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/HttpToHttps","ruleIndex": 3,"level": "warning","message": {"text":"http.request uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","markdown":"{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","arguments": ["[http.request](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/utils.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":993,  "endLine":993,  "startColumn":21,  "endColumn":33}  }}],"fingerprints": {"snyk/asset/finding/v1": "5ac6102f-677f-4996-9a45-10ece564a8d9","identity": "5ac6102f-677f-4996-9a45-10ece564a8d9","0": "ab5f037018ef28802937ff21628f1384b52dcee855f1f2750ea55a4c92d9cfe6","1": "aac70831.01b3f350.8b18f948.c559ebce.79a7d027.98c7c24d.cd61fc56.bd899c1f.aac70831.4773f344.b7007fb3.c559ebce.601e4ccc.98c7c24d.cd61fc56.dbd0b2bd"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/utils.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":993,  "endLine":993,  "startColumn":21,  "endColumn":33}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 577,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/HttpToHttps","ruleIndex": 3,"level": "warning","message": {"text":"http.request uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","markdown":"{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","arguments": ["[http.request](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/utils.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":1247,  "endLine":1247,  "startColumn":17,  "endColumn":29}  }}],"fingerprints": {"identity": "de6018a7-3025-450f-a293-b3b560384275","0": "2a8b6e0a40811bbfaeb3130deec7c2006677e223c6d742108aef4b5fe07b8d7c","1": "aac70831.01b3f350.8b18f948.c559ebce.79a7d027.98c7c24d.cd61fc56.bd899c1f.aac70831.4773f344.b7007fb3.c559ebce.601e4ccc.98c7c24d.cd61fc56.dbd0b2bd","snyk/asset/finding/v1": "de6018a7-3025-450f-a293-b3b560384275"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/utils.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":1247,  "endLine":1247,  "startColumn":17,  "endColumn":29}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 577,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/InsecureHash","ruleIndex": 4,"level": "note","message": {"text":"crypto.createHash hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[crypto.createHash](0)","[crypto.createHash](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/etag/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":46,  "endLine":47,  "startColumn":14,  "endColumn":16}  }}],"fingerprints": {"identity": "41d92286-9eaf-4d60-b7e1-b55014d8277c","0": "5fd97934033a11b6c1a4642a6643acc59d7cfc7e1745790b6ee24ced9899a4fe","1": "37bc1bfe.4773f344.191eaf2b.d9da6552.ef9f7d82.0204cbe8.7a8c7288.71520ffe.ae77ea27.4773f344.191eaf2b.d9da6552.f7b6c27c.0204cbe8.04f551bd.71520ffe","snyk/asset/finding/v1": "41d92286-9eaf-4d60-b7e1-b55014d8277c"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/etag/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":46,  "endLine":47,  "startColumn":14,  "endColumn":16}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/etag/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":46,  "endLine":47,  "startColumn":14,  "endColumn":16}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 377,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/InsecureHash","ruleIndex": 4,"level": "note","message": {"text":"crypto.createHash hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[crypto.createHash](0)","[crypto.createHash](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/cmap/auth/scram.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":169,  "endLine":169,  "startColumn":15,  "endColumn":32}  }}],"fingerprints": {"snyk/asset/finding/v1": "d3e75a30-98bb-4891-917a-fe42ab176a3c","identity": "d3e75a30-98bb-4891-917a-fe42ab176a3c","0": "b9fe2081d4393f108f25b77bfebf4a143e94c4171222b04d32e2f4defc52f715","1": "37bc1bfe.4773f344.191eaf2b.59980c95.ef9f7d82.8020cfdf.cd61fc56.71520ffe.354a8a96.4773f344.191eaf2b.d7919eeb.f7b6c27c.5fce695c.cd61fc56.71520ffe"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/cmap/auth/scram.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":169,  "endLine":169,  "startColumn":15,  "endColumn":32}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/cmap/auth/scram.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":169,  "endLine":169,  "startColumn":15,  "endColumn":32}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 427,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/InsecureHash","ruleIndex": 4,"level": "note","message": {"text":"crypto.createHash hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[crypto.createHash](0)","[crypto.createHash](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/cmap/auth/scram.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":198,  "endLine":198,  "startColumn":12,  "endColumn":29}  }}],"fingerprints": {"0": "9a641ac2031ba31c93ba4c83dca55bd2c1b722e2a554bb5e2c4c5c7ee5df8d5b","1": "37bc1bfe.4773f344.191eaf2b.d9da6552.ef9f7d82.8020cfdf.83265159.71520ffe.354a8a96.4773f344.191eaf2b.d9da6552.f7b6c27c.5fce695c.83265159.71520ffe","snyk/asset/finding/v1": "7dc7afa3-d0d3-4b1c-9361-1c378f0a5801","identity": "7dc7afa3-d0d3-4b1c-9361-1c378f0a5801"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/cmap/auth/scram.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":198,  "endLine":198,  "startColumn":12,  "endColumn":29}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/cmap/auth/scram.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":198,  "endLine":198,  "startColumn":12,  "endColumn":29}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 427,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/InsecureHash","ruleIndex": 4,"level": "note","message": {"text":"crypto.createHash hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[crypto.createHash](0)","[crypto.createHash](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/cmap/auth/scram.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":234,  "endLine":234,  "startColumn":11,  "endColumn":28}  }}],"fingerprints": {"0": "6b62e2c82f115a602f637001cec438510998ba915297c8d71149760b2b855549","1": "37bc1bfe.4773f344.191eaf2b.59980c95.ef9f7d82.8020cfdf.cd61fc56.71520ffe.354a8a96.706318d0.191eaf2b.59980c95.7b7eed37.5fce695c.cd61fc56.71520ffe","snyk/asset/finding/v1": "cec419ea-0114-434c-9bfb-80dc9d558228","identity": "cec419ea-0114-434c-9bfb-80dc9d558228"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/cmap/auth/scram.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":234,  "endLine":234,  "startColumn":11,  "endColumn":28}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/cmap/auth/scram.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":234,  "endLine":234,  "startColumn":11,  "endColumn":28}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 427,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/InsecureHash","ruleIndex": 4,"level": "note","message": {"text":"crypto.createHash hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[crypto.createHash](0)","[crypto.createHash](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/cmap/auth/scram.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":268,  "endLine":268,  "startColumn":10,  "endColumn":27}  }}],"fingerprints": {"1": "37bc1bfe.4773f344.191eaf2b.d9da6552.ef9f7d82.036961e9.83265159.71520ffe.354a8a96.706318d0.191eaf2b.d9da6552.7b7eed37.036961e9.83265159.71520ffe","snyk/asset/finding/v1": "e1480c30-3ae4-44ba-89ec-d0ea0f4dfd8e","identity": "e1480c30-3ae4-44ba-89ec-d0ea0f4dfd8e","0": "f15e64d63de438e402c09aa433ef10607b27339dd0e18b0a47e9b679b31fc577"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/cmap/auth/scram.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":268,  "endLine":268,  "startColumn":10,  "endColumn":27}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/cmap/auth/scram.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":268,  "endLine":268,  "startColumn":10,  "endColumn":27}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 427,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/InsecureTLSConfig","ruleIndex": 5,"level": "error","message": {"text":"Setting the 'rejectUnauthorized' to 'false' makes TLS connections and HTTPS requests insecure.","markdown":"Setting the '{0}' to '{1}' makes TLS connections and HTTPS requests insecure.","arguments": ["[rejectUnauthorized](0)","[false](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/connection_string.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":943,  "endLine":943,  "startColumn":17,  "endColumn":51}  }}],"fingerprints": {"1": "ca516799.e0e5ff6d.673eb66b.59162423.ef9f7d82.8020cfdf.cd61fc56.1f55c1aa.ca516799.dbabbde7.a3fa85e7.59162423.ef9f7d82.1ec71ef1.83265159.6723ddeb","snyk/asset/finding/v1": "75de3fa4-48f5-4c85-b484-b485e2fa9349","identity": "75de3fa4-48f5-4c85-b484-b485e2fa9349","0": "2e911dfb545ac2e1c4fe600518fe9a5c63203cef55546d5bb40c0954925c23a5"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/connection_string.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":943,  "endLine":943,  "startColumn":25,  "endColumn":43}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/connection_string.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":943,  "endLine":943,  "startColumn":46,  "endColumn":51}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 822,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/InsecureTLSConfig","ruleIndex": 5,"level": "error","message": {"text":"Setting the 'rejectUnauthorized' to 'false' makes TLS connections and HTTPS requests insecure.","markdown":"Setting the '{0}' to '{1}' makes TLS connections and HTTPS requests insecure.","arguments": ["[rejectUnauthorized](0)","[false](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/connection_string.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":949,  "endLine":949,  "startColumn":17,  "endColumn":96}  }}],"fingerprints": {"identity": "8966e5ee-8fbc-4c3c-9718-923289e97a25","0": "2e2accbb7a3911fdaf0d6121afd77bc123613bc7e604c53f68acc8343cec2256","1": "ca516799.dd24836f.673eb66b.59162423.ef9f7d82.0ef37289.cd61fc56.ae94f388.ca516799.dbabbde7.a3fa85e7.59162423.ef9f7d82.1ec71ef1.83265159.6723ddeb","snyk/asset/finding/v1": "8966e5ee-8fbc-4c3c-9718-923289e97a25"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/connection_string.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":949,  "endLine":949,  "startColumn":25,  "endColumn":43}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/lib/connection_string.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":949,  "endLine":949,  "startColumn":84,  "endColumn":89}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 822,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/InsecureTLSConfig","ruleIndex": 5,"level": "error","message": {"text":"Setting the 'rejectUnauthorized' to 'false' makes TLS connections and HTTPS requests insecure.","markdown":"Setting the '{0}' to '{1}' makes TLS connections and HTTPS requests insecure.","arguments": ["[rejectUnauthorized](0)","[false](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/connection_string.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":1147,  "endLine":1147,  "startColumn":9,  "endColumn":43}  }}],"fingerprints": {"identity": "5443a009-ef6f-461a-840b-42f6502abc13","0": "b0d3142ff7abd40132ac8ede5b99d038c16f94028432dc4c62d8df83e1191e01","1": "ca516799.e0e5ff6d.673eb66b.59162423.ef9f7d82.8020cfdf.cd61fc56.1f55c1aa.ca516799.dbabbde7.a3fa85e7.59162423.ef9f7d82.1ec71ef1.83265159.6723ddeb","snyk/asset/finding/v1": "5443a009-ef6f-461a-840b-42f6502abc13"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/connection_string.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":1147,  "endLine":1147,  "startColumn":17,  "endColumn":35}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/connection_string.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":1147,  "endLine":1147,  "startColumn":38,  "endColumn":43}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 822,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/InsecureTLSConfig","ruleIndex": 5,"level": "error","message": {"text":"Setting the 'rejectUnauthorized' to 'false' makes TLS connections and HTTPS requests insecure.","markdown":"Setting the '{0}' to '{1}' makes TLS connections and HTTPS requests insecure.","arguments": ["[rejectUnauthorized](0)","[false](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/connection_string.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":1152,  "endLine":1152,  "startColumn":9,  "endColumn":88}  }}],"fingerprints": {"identity": "5c05574d-ab91-4245-972b-b6ef42c8a8b1","0": "a1abd2f82fd7536e8dbc3aefb386f7d1bed361d0fa9428317b6d3f0cd1720124","1": "ca516799.dd24836f.673eb66b.59162423.ef9f7d82.0ef37289.cd61fc56.ae94f388.ca516799.dbabbde7.a3fa85e7.59162423.ef9f7d82.1ec71ef1.83265159.6723ddeb","snyk/asset/finding/v1": "5c05574d-ab91-4245-972b-b6ef42c8a8b1"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/connection_string.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":1152,  "endLine":1152,  "startColumn":17,  "endColumn":35}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/mongodb/src/connection_string.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":1152,  "endLine":1152,  "startColumn":76,  "endColumn":81}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 822,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/reDOS","ruleIndex": 6,"level": "error","message": {"text":"Unsanitized user input from the request URL flows into match, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).","markdown":"Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).","arguments": ["[the request URL](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)","[match](15)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":18,  "endColumn":23}  }}],"fingerprints": {"1": "d7b3d065.4773f344.126beb45.ed202363.ef9f7d82.37110c89.83265159.d5de5421.84a53940.4773f344.b7007fb3.1a7f4325.3f452f8c.8431f2ca.c08dd55c.53752168","snyk/asset/finding/v1": "ad447944-c0dc-4842-b415-b09afc44719f","identity": "ad447944-c0dc-4842-b415-b09afc44719f","0": "54de3061fda353d189e2e97e0ef1f8cd8927fd8a5fcd58d25e0473b5b51e82f6"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":184,  "endLine":184,  "startColumn":7,  "endColumn":18}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":184,  "endLine":184,  "startColumn":7,  "endColumn":18}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":184,  "endLine":184,  "startColumn":3,  "endColumn":18}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":184,  "endLine":184,  "startColumn":3,  "endColumn":6}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":224,  "endLine":224,  "startColumn":30,  "endColumn":33}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":478,  "endLine":478,  "startColumn":23,  "endColumn":26}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":291,  "endLine":291,  "startColumn":52,  "endColumn":55}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":576,  "endLine":576,  "startColumn":48,  "endColumn":51}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":480,  "endLine":480,  "startColumn":21,  "endColumn":24}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":480,  "endLine":480,  "startColumn":12,  "endColumn":20}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":480,  "endLine":480,  "startColumn":26,  "endColumn":34}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":224,  "endLine":224,  "startColumn":11,  "endColumn":15}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":237,  "endLine":237,  "startColumn":33,  "endColumn":37}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":517,  "endLine":517,  "startColumn":29,  "endColumn":33}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":24,  "endColumn":28}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "vulnerable-auth-API/node_modules/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":18,  "endColumn":23}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 756,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}}],"properties": {"coverage": [{"files": 2,"isSupported": true,"lang": ".cjs","type": "SUPPORTED"},{"files": 1,"isSupported": true,"lang": ".html","type": "SUPPORTED"},{"files": 753,"isSupported": true,"lang": ".js","type": "SUPPORTED"},{"files": 3,"isSupported": true,"lang": ".jsx","type": "SUPPORTED"},{"files": 5,"isSupported": true,"lang": ".mjs","type": "SUPPORTED"},{"files": 1,"isSupported": true,"lang": ".py","type": "SUPPORTED"},{"files": 288,"isSupported": true,"lang": ".ts","type": "SUPPORTED"},{"files": 5,"isSupported": true,"lang": ".xml","type": "SUPPORTED"}]}}]}
